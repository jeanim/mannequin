global proc mannequinContextProperties() {
  setUITemplate -pushTemplate DefaultTemplate;

  string $label = `toolPropertyWindow -q -field`;
  text -e -label "Mannequin Settings" $label;

  string $reset = `toolPropertyWindow -q -resetButton`;
  button -e -command "mannequinReset" $reset;

  string $help = `toolPropertyWindow -q -helpButton`;
  button -e -command "mannequinHelp" $help;

  string $parent = `toolPropertyWindow -q -location`;
  setParent $parent;

  if (`columnLayout -ex mannequinSettingsLayout`) {
      deleteUI mannequinSettingsLayout;
  }

  columnLayout -adjustableColumn true mannequinSettingsLayout;
    separator -height 5 -style "none";
    button -label "Show Mannequin Palette" -command "mannequinPaletteBegin";
    separator -height 10 -style "none";

    frameLayout -collapsable false -label "Manipulators";
      checkBoxGrp -label "Adjust:"
                  -label1 "Make shorter joints have smaller manipulators"
                  -changeCommand "mannequinManipAdjustChanged"
                  -cw 1 60
                  chartreuseManipAutoAdjust;
      floatSliderGrp -label "Size:"
                     -minValue 0.1 -maxValue 10.0 -value 1.5
                     -fieldMinValue 0.01 -fieldMaxValue 100.0
                     -changeCommand "mannequinManipSizeChanged"
                     -cw 1 60 -cw 3 120 chartreuseManipSize;
    setParent ..;

  setUITemplate -popTemplate;
  mannequinPaletteBegin;
}

global proc mannequinContextValues(string $name) {
  $ctx = `currentCtx`;

  $scale = `mannequinContext -q -ms $ctx`;
  floatSliderGrp -e -value $scale chartreuseManipSize;

  $adjust = `mannequinContext -q -ma $ctx`;
  checkBoxGrp -e -value1 $adjust chartreuseManipAutoAdjust;

  toolPropertySelect mannequinSettingsLayout;
}

global proc mannequinContextFinish() {
  mannequinPaletteFinish;
}

global proc mannequinReset() {
  checkBoxGrp -e -value1 false chartreuseManipAutoAdjust;
  mannequinManipAdjustChanged;
  floatSliderGrp -e -value 1.5 chartreuseManipSize;
  mannequinManipSizeChanged;
}

global proc mannequinHelp() {
  showHelp -a "https://github.com/sdao/mannnequin";
}

global proc mannequinManipAdjustChanged() {
  $adjust = `checkBoxGrp -q -value1 chartreuseManipAutoAdjust`;
  $ctx = `currentCtx`;
  mannequinContext -e -ma $adjust $ctx;
}

global proc mannequinManipSizeChanged() {
  $scale = `floatSliderGrp -q -value chartreuseManipSize`;
  $ctx = `currentCtx`;
  mannequinContext -e -ms $scale $ctx;
}

global proc mannequinPaletteBegin() {
  if (!`dockControl -ex mannequinPaletteDock`) {
    window mannequinPaletteWindow;
    menuBarLayout;
      textField -placeholderText "Type to search" mannequinSearchField;
      separator -height 5 -style "none";
    setParent ..;
    scrollLayout -childResizable true;
      columnLayout -adjustableColumn true mannequinPaletteLayout;
      setParent ..;
    setParent ..;

    dockControl -area "right"
                -content mannequinPaletteWindow
                -label "Mannequin"
                -allowedArea "left"
                -allowedArea "right" mannequinPaletteDock;

    // The rest of the palette UI is done in Python because it uses Qt/PySide.
    python "setupMannequinUI()";
  }

  evalDeferred "dockControl -e -visible true -raise mannequinPaletteDock";
}

global proc mannequinPaletteFinish() {
  python "tearDownMannequinUI()";
  if (`dockControl -ex mannequinPaletteDock`) {
    deleteUI mannequinPaletteDock;
  }
}

global proc mannequinInstallShelf() {
  if (`about -batch`) {
    return;
  }

  if (!`shelfLayout -ex Mannequin`) {
    evalDeferred "loadNewShelf \"shelf_Mannequin.mel\"";
  }
}

global proc mannequinTool() {
  // Create context if it doesn't exist.
  if (!`mannequinContext -ex globalMannequinContext`) {
    mannequinContext globalMannequinContext;
  }

  // Do nothing if we're in the context already.
  if (`currentCtx` == "globalMannequinContext") {
    return;
  }

  setToolTo globalMannequinContext;
}
